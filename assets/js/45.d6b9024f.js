(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{498:function(t,s,a){"use strict";a.r(s);var e=a(29),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"安装部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装部署"}},[t._v("#")]),t._v(" 安装部署")]),t._v(" "),a("h2",{attrs:{id:"kubeadm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm"}},[t._v("#")]),t._v(" kubeadm")]),t._v(" "),a("h3",{attrs:{id:"准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[t._v("#")]),t._v(" 准备")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭防火墙")]),t._v("\nsystemctl stop firewalld\nsystemctl disabled firewalld\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu")]),t._v("\nufw disable\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭SeLinux")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/enforcing/disabled/'")]),t._v(" /etc/selinux/config "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#永久关闭")]),t._v("\nsetenforce "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#临时")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭swap")]),t._v("\nswapoff -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#临时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -ri "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/.*swap.*/#&/'")]),t._v(" /etc/fstab "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#永久")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置主机名")]),t._v("\nhostnamectl set-hostname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#master中添加hosts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n192.168.142.141 k8smaster\n192.168.142.142 k8snode1\n192.168.142.143 k8snode2\nEOF")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将桥接的流量传递到iptables链")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/sysctl.d/k8s.conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),t._v("\nsysctl --system\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 时间同步")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" netdata -y\nnetdata time.windows.com\n\n")])])]),a("h3",{attrs:{id:"安装docker-kubeadm-kubelet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-kubeadm-kubelet"}},[t._v("#")]),t._v(" 安装Docker,kubeadm,kubelet")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("安装Docker")])]),t._v(" "),a("li",[a("p",[t._v("安装 kubeadm,kubelet,kubectl")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y apt-transport-https ca-certificates "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/apt/sources.list.d/kubernetes.list\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y kubelet kubeadm kubectl\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-mark hold kubelet kubeadm kubectl\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 阿里镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y apt-transport-https\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" - \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/etc/apt/sources.list.d/kubernetes.list")]),t._v("\ndeb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\nEOF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\n")])])]),a("p",[t._v("开机自启")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kubelet\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"部署kubernetes-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署kubernetes-master"}},[t._v("#")]),t._v(" 部署kubernetes Master")]),t._v(" "),a("p",[t._v("kubelet 服务的从1.22开始更改为systemd,和docker的驱动不一致，将导致启动失败")]),t._v(" "),a("p",[t._v("修改docker daemon.json")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/docker/daemon.json \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exec-opts"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"native.cgroupdriver=systemd"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在master上执行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubeadm init "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --apiserver-advertise-address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".142.141 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --image-repository registry.aliyuncs.com/google_containers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --kubernetes-version v1.23.6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --service-cidr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.0/12 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --pod-network-cidr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".0.0/16 \n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl get nodes\n")])])]),a("p",[a("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220421162223137.png",alt:"image-20220421162223137"}})]),t._v(" "),a("h3",{attrs:{id:"加入kubernetes-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加入kubernetes-node"}},[t._v("#")]),t._v(" 加入kubernetes Node")]),t._v(" "),a("p",[t._v("执行在init时生成的命令")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220421162731757.png",alt:"image-20220421162731757"}})]),t._v(" "),a("p",[t._v("在node中执行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubeadm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".142.141:6443 --token 9hm9ba.8t3b3709c0j73b8a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --discovery-token-ca-cert-hash sha256:009b6141bfce9ae82dd83fdf8408a3812765d8cbb82dc6915e14dacbca185134\n")])])]),a("p",[t._v("如果在init 后没有记下或者失效，执行以下命令重新生成")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubeadm token create --print-join-command\n")])])]),a("p",[a("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220421163830640.png",alt:"image-20220421163830640"}})]),t._v(" "),a("h3",{attrs:{id:"安装pod网络插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装pod网络插件"}},[t._v("#")]),t._v(" 安装pod网络插件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nkubectl get pods -n kube-system\n")])])]),a("p",[a("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220421164602335.png",alt:"image-20220421164602335"}})]),t._v(" "),a("h2",{attrs:{id:"测试kubernetes集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试kubernetes集群"}},[t._v("#")]),t._v(" 测试kubernetes集群")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建pod")]),t._v("\nkubectl create deployment nginx --image"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暴漏端口")]),t._v("\nkubectl expose deployment nginx --port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" --type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NodePort\n\nkubectl get pods,svc\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);