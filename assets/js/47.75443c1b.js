(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{501:function(t,a,s){"use strict";s.r(a);var e=s(29),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[toc]")]),t._v(" "),s("h1",{attrs:{id:"pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[t._v("#")]),t._v(" pod")]),t._v(" "),s("h2",{attrs:{id:"镜像拉取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像拉取"}},[t._v("#")]),t._v(" 镜像拉取")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("镜像拉取策略")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("IfNotPresent")]),t._v(" "),s("p",[t._v("默认值，镜像不在宿主机上时才拉取")])]),t._v(" "),s("li",[s("p",[t._v("Always")]),t._v(" "),s("p",[t._v("每次创建pod都会重新拉取镜像")])]),t._v(" "),s("li",[s("p",[t._v("Never")]),t._v(" "),s("p",[t._v("pod永远不会主动拉取镜像")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"资源限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源限制"}},[t._v("#")]),t._v(" 资源限制")]),t._v(" "),s("blockquote",[s("p",[t._v("CPU 资源单位 : CPU 资源的约束和请求以 “cpu” 为单位。 在 Kubernetes 中，一个 CPU 等于1 个物理 CPU 核 或者 一个虚拟核， 取决于节点是一台物理主机还是运行在某物理主机上的虚拟机。")]),t._v(" "),s("p",[t._v("memory 的约束和请求以字节为单位。")])]),t._v(" "),s("ul",[s("li",[t._v("request")]),t._v(" "),s("li",[t._v("limit")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" images.my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("company.example/app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v4\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"64Mi"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"250m"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"128Mi"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500m"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("aggregator\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" images.my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("company.example/log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("aggregator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v6\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"64Mi"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"250m"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"128Mi"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500m"')]),t._v("\n")])])]),s("h2",{attrs:{id:"重启策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重启策略"}},[t._v("#")]),t._v(" 重启策略")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Always：默认策略")]),t._v(" "),s("p",[t._v("容器终止退出时，总是重启容器")])]),t._v(" "),s("li",[s("p",[t._v("OnFailure")]),t._v(" "),s("p",[t._v("容器异常退出时，重启容器")])]),t._v(" "),s("li",[s("p",[t._v("Never")]),t._v(" "),s("p",[t._v("容器终止退出时，从不重启容器")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n")])])]),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("ul",[s("li",[t._v("pod阶段")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Pending")]),t._v(" "),s("td",[t._v("Pod 已被 Kubernetes 系统接受，但有一个或者多个容器尚未创建亦未运行。此阶段包括等待 Pod 被调度的时间和通过网络下载镜像的时间。")])]),t._v(" "),s("tr",[s("td",[t._v("Running")]),t._v(" "),s("td",[t._v("Pod 已经绑定到了某个节点，Pod 中所有的容器都已被创建。至少有一个容器仍在运行，或者正处于启动或重启状态。")])]),t._v(" "),s("tr",[s("td",[t._v("Succeeded")]),t._v(" "),s("td",[t._v("Pod 中的所有容器都已成功终止，并且不会再重启。")])]),t._v(" "),s("tr",[s("td",[t._v("Failed")]),t._v(" "),s("td",[t._v("Pod 中的所有容器都已终止，并且至少有一个容器是因为失败终止。也就是说，容器以非 0 状态退出或者被系统终止")])]),t._v(" "),s("tr",[s("td",[t._v("Unknown")]),t._v(" "),s("td",[t._v("因为某些原因无法取得 Pod 的状态。这种情况通常是因为与 Pod 所在主机通信失败。")])])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("容器状态")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Waiting")]),t._v(" "),s("p",[t._v("容器正在完成启动所需要的操作：拉取镜像、向容器应用 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Secret"),s("OutboundLink")],1),t._v(" 数据")])]),t._v(" "),s("li",[s("p",[t._v("Running")]),t._v(" "),s("p",[t._v("表明容器正在执行状态并且没有问题发生。 如果配置了 "),s("code",[t._v("postStart")]),t._v(" 回调，那么该回调已经执行且已完成")])]),t._v(" "),s("li",[s("p",[t._v("Terminated")]),t._v(" "),s("p",[t._v("正常结束或者因为某些原因失败")])])])])]),t._v(" "),s("h2",{attrs:{id:"容器探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器探针"}},[t._v("#")]),t._v(" 容器探针")]),t._v(" "),s("h3",{attrs:{id:"检查机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查机制"}},[t._v("#")]),t._v(" 检查机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("exec")]),t._v(" "),s("p",[t._v("在容器内执行指定命令。如果命令退出时返回码为 0 则认为诊断成功。")])]),t._v(" "),s("li",[s("p",[t._v("grpc")]),t._v(" "),s("p",[t._v("使用 "),s("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),s("OutboundLink")],1),t._v(" 执行一个远程过程调用。 目标应该实现 "),s("a",{attrs:{href:"https://grpc.io/grpc/core/md_doc_health-checking.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC健康检查"),s("OutboundLink")],1),t._v('。 如果响应的状态是 "SERVING"，则认为诊断成功。 gRPC 探针是一个 alpha 特性，只有在启用了 "GRPCContainerProbe" '),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gate/",target:"_blank",rel:"noopener noreferrer"}},[t._v("特性门控"),s("OutboundLink")],1),t._v("时才能使用。")])]),t._v(" "),s("li",[s("p",[t._v("httpGet")]),t._v(" "),s("p",[t._v("对容器的 IP 地址上指定端口和路径执行 HTTP "),s("code",[t._v("GET")]),t._v(" 请求。如果响应的状态码大于等于 200 且小于 400，则诊断被认为是成功的。")])]),t._v(" "),s("li",[s("p",[t._v("tcpSocket")]),t._v(" "),s("p",[t._v("对容器的 IP 地址上的指定端口执行 TCP 检查。如果端口打开，则诊断被认为是成功的。 如果远程系统（容器）在打开连接后立即将其关闭，也算作是健康的")]),t._v(" "),s("h3",{attrs:{id:"探测结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探测结果"}},[t._v("#")]),t._v(" 探测结果")])]),t._v(" "),s("li",[s("p",[t._v("Success：容器通过了诊断")])]),t._v(" "),s("li",[s("p",[t._v("Failure：容器未通过诊断")])]),t._v(" "),s("li",[s("p",[t._v("Unknown：诊断失败，因此不会采取任何行动")])])]),t._v(" "),s("h3",{attrs:{id:"探测类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探测类型"}},[t._v("#")]),t._v(" 探测类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("livenessProbe")]),t._v(" "),s("p",[t._v("指示容器是否正在运行。如果存活态探测失败，则 kubelet 会杀死容器， 并且容器将根据其"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("重启策略"),s("OutboundLink")],1),t._v("决定未来。如果容器不提供存活探针， 则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("readinessProbe")]),t._v(" "),s("p",[t._v("指示容器是否准备好为请求提供服务。如果就绪态探测失败， 端点控制器将从与 Pod 匹配的所有服务的端点列表中删除该 Pod 的 IP 地址。 初始延迟之前的就绪态的状态值默认为 "),s("code",[t._v("Failure")]),t._v("。 如果容器不提供就绪态探针，则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("startupProbe")]),t._v(" "),s("p",[t._v("指示容器中的应用是否已经启动。如果提供了启动探针，则所有其他探针都会被 禁用，直到此探针成功为止。如果启动探测失败，"),s("code",[t._v("kubelet")]),t._v(" 将杀死容器，而容器依其 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("重启策略"),s("OutboundLink")],1),t._v("进行重启。 如果容器没有提供启动探测，则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])])]),t._v(" "),s("h2",{attrs:{id:"调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调度"}},[t._v("#")]),t._v(" 调度")]),t._v(" "),s("blockquote",[s("p",[t._v("在 Kubernetes 中，调度 是指将 Pod 放置到合适的 Node 上，然后对应 Node 上的 Kubelet 才能够运行这些 pod")])]),t._v(" "),s("p",[t._v("调度器通过 kubernetes 的监测（Watch）机制来发现集群中新创建且尚未被调度到 Node 上的 Pod。 调度器会将发现的每一个未调度的 Pod 调度到一个合适的 Node 上来运行。 调度器会依据下文的调度原则来做出调度选择。")]),t._v(" "),s("h3",{attrs:{id:"kube-scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kube-scheduler"}},[t._v("#")]),t._v(" kube-scheduler")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kube-scheduler/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kube-scheduler"),s("OutboundLink")],1),t._v(" 是 Kubernetes 集群的默认调度器，对每一个新创建的 Pod 或者是未被调度的 Pod，kube-scheduler 会选择一个最优的 Node 去运行这个 Pod。在一个集群中，满足一个 Pod 调度请求的所有 Node 称之为 "),s("em",[t._v("可调度节点")]),t._v("。 如果没有任何一个 Node 能满足 Pod 的资源请求，那么这个 Pod 将一直停留在 未调度状态直到调度器能够找到合适的 Node。")]),t._v(" "),s("p",[t._v("调度器先在集群中找到一个 Pod 的所有可调度节点，然后根据一系列函数对这些可调度节点打分， 选出其中得分最高的 Node 来运行 Pod。之后，调度器将这个调度决定通知给 kube-apiserver，这个过程叫做 "),s("em",[t._v("绑定")])]),t._v(" "),s("p",[t._v("在做调度决定时需要考虑的因素包括：单独和整体的资源请求、硬件/软件/策略限制、 亲和以及反亲和要求、数据局域性、负载间的干扰等等")]),t._v(" "),s("h3",{attrs:{id:"kube-scheduler-调度流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kube-scheduler-调度流程"}},[t._v("#")]),t._v(" kube-scheduler 调度流程")]),t._v(" "),s("p",[t._v("kube-scheduler 给一个 pod 做调度选择分为两步：")]),t._v(" "),s("ul",[s("li",[t._v("过滤")]),t._v(" "),s("li",[t._v("打分")])]),t._v(" "),s("p",[t._v("过滤阶段会将所有满足 Pod 调度需求的 Node 选出来。")]),t._v(" "),s("p",[t._v("打分阶段，调度器会为 Pod 从所有可调度节点中选取一个最合适的 Node。 根据当前启用的打分规则，调度器会给每一个可调度节点进行打分。")]),t._v(" "),s("p",[t._v("可以通过调度策略和调度配置来配置调度器的过滤和打分行为：")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/scheduling/policies",target:"_blank",rel:"noopener noreferrer"}},[t._v("调度策略"),s("OutboundLink")],1),t._v(" 允许配置过滤的 "),s("em",[t._v("断言(Predicates)")]),t._v(" 和打分的 "),s("em",[t._v("优先级(Priorities)")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/scheduling/config/#profiles",target:"_blank",rel:"noopener noreferrer"}},[t._v("调度配置"),s("OutboundLink")],1),t._v(" 允许配置实现不同调度阶段的插件， 包括："),s("code",[t._v("QueueSort")]),t._v(", "),s("code",[t._v("Filter")]),t._v(", "),s("code",[t._v("Score")]),t._v(", "),s("code",[t._v("Bind")]),t._v(", "),s("code",[t._v("Reserve")]),t._v(", "),s("code",[t._v("Permit")]),t._v(" 等等。 也可以配置 kube-scheduler 运行不同的配置文件。")])]),t._v(" "),s("h2",{attrs:{id:"为pod指派节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为pod指派节点"}},[t._v("#")]),t._v(" 为pod指派节点")]),t._v(" "),s("blockquote",[s("p",[t._v("可以约束一个 "),s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),s("OutboundLink")],1),t._v(" 只能在特定的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),s("OutboundLink")],1),t._v("上运行")])]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#%E8%8A%82%E7%82%B9%E6%A0%87%E7%AD%BE"}},[t._v("节点标签")]),t._v("和节点标签选择符")])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#%E4%BA%B2%E5%92%8C%E6%80%A7%E4%B8%8E%E5%8F%8D%E4%BA%B2%E5%92%8C%E6%80%A7"}},[t._v("亲和性和反亲和性")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#nodename"}},[t._v("nodename")])])])]),t._v(" "),s("h3",{attrs:{id:"节点标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点标签"}},[t._v("#")]),t._v(" 节点标签")]),t._v(" "),s("p",[t._v("通过手动给节点添加标签，以使创建的pod调度到所选择的节点上")]),t._v(" "),s("h4",{attrs:{id:"给节点添加标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给节点添加标签"}},[t._v("#")]),t._v(" 给节点添加标签")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("添加标签")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl label nodes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-node-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("disktype")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ssd\n")])])]),s("p",[s("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220422182152418.png",alt:"image-20220422182152418"}})])]),t._v(" "),s("li",[s("p",[t._v("验证")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl get nodes --show-labels\n")])])]),s("p",[s("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220422182226846.png",alt:"image-20220422182226846"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://ciallo-1257179806.cos.ap-shanghai.myqcloud.com/image-20220422182315420.png",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"创建一个调度到特定节点上的pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个调度到特定节点上的pod"}},[t._v("#")]),t._v(" 创建一个调度到特定节点上的pod")]),t._v(" "),s("p",[t._v("此配置文件描述了一个拥有节点选择器(nodeselector)"),s("code",[t._v("disktype=ssd")]),t._v("的Pod，该Pod将被调度到存在``disktype=ssd`的节点上")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disktype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ssd\n\n")])])]),s("ol",[s("li",[s("p",[t._v("使用该配置文件创建一个pod")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl create -f nodeselector.yaml\n")])])])]),t._v(" "),s("li",[s("p",[t._v("验证 pod 是不是运行在所选择的节点上")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl get pods --output"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("wide\n")])])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"亲和性与反亲和性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#亲和性与反亲和性"}},[t._v("#")]),t._v(" 亲和性与反亲和性")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("nodeSelector")]),t._v(" 提供了一种最简单的方法来将 Pod 约束到具有特定标签的节点上。 亲和性和反亲和性扩展了你可以定义的约束类型")])]),t._v(" "),s("p",[t._v("选择亲和性与反亲和性的理由：")]),t._v(" "),s("ul",[s("li",[t._v("亲和性、反亲和性语言的表达能力更强。"),s("code",[t._v("nodeSelector")]),t._v(" 只能选择拥有所有指定标签的节点。 亲和性、反亲和性为你提供对选择逻辑的更强控制能力。")]),t._v(" "),s("li",[t._v("你可以标明某规则是“软需求”或者“偏好”，这样调度器在无法找到匹配节点时仍然调度该 Pod。")]),t._v(" "),s("li",[t._v("你可以使用节点上（或其他拓扑域中）运行的其他 Pod 的标签来实施调度约束， 而不是只能使用节点本身的标签。这个能力让你能够定义规则允许哪些 Pod 可以被放置在一起。")])]),t._v(" "),s("h4",{attrs:{id:"节点亲和性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点亲和性"}},[t._v("#")]),t._v(" 节点亲和性")]),t._v(" "),s("p",[t._v("节点亲和性概念上类似于 "),s("code",[t._v("nodeSelector")]),t._v("， 它可以根据节点上的标签来约束 Pod 可以调度到哪些节点上。")]),t._v(" "),s("p",[t._v("节点亲和性有两种：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),t._v("： 调度器只有在规则被满足的时候才能执行调度。此功能类似于 "),s("code",[t._v("nodeSelector")]),t._v("， 但其语法表达能力更强。")]),t._v(" "),s("li",[s("code",[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),t._v("： 调度器会尝试寻找满足对应规则的节点。如果找不到匹配的节点，调度器仍然会调度该 Pod。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("affinity\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/os\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" linux\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("key\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("affinity\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/pause"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n")])])]),s("p",[t._v("在上面的配置中：")]),t._v(" "),s("ul",[s("li",[t._v("节点必须包含键名为 "),s("code",[t._v("kubernetes.io/os")]),t._v(" 的标签，并且其取值为 "),s("code",[t._v("linux")])]),t._v(" "),s("li",[t._v("节点 "),s("strong",[t._v("最好")]),t._v(" 具有键名为 "),s("code",[t._v("another-node-label-key")]),t._v(" 且取值为 "),s("code",[t._v("another-node-label-value")]),t._v(" 的标签")])]),t._v(" "),s("p",[t._v("可以使用 "),s("code",[t._v("operator")]),t._v(" 字段来为 Kubernetes 设置在解释规则时要使用的逻辑操作符。 可以使用 "),s("code",[t._v("In")]),t._v("、"),s("code",[t._v("NotIn")]),t._v("、"),s("code",[t._v("Exists")]),t._v("、"),s("code",[t._v("DoesNotExist")]),t._v("、"),s("code",[t._v("Gt")]),t._v(" 和 "),s("code",[t._v("Lt")]),t._v(" 之一作为操作符。")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("NotIn")]),t._v(" 和 "),s("code",[t._v("DoesNotExist")]),t._v(" 可用来实现节点反亲和性行为")])]),t._v(" "),s("ul",[s("li",[s("p",[s("font",{attrs:{color:"red"}},[t._v("如果同时指定了 "),s("code",[t._v("nodeSelector")]),t._v(" 和 "),s("code",[t._v("nodeAffinity")]),t._v("，"),s("strong",[t._v("两者")]),t._v(" 必须都要满足， 才能将 Pod 调度到候选节点上。")])],1)]),t._v(" "),s("li",[s("p",[s("font",{attrs:{color:"red"}},[t._v("如果指定了多个与 "),s("code",[t._v("nodeAffinity")]),t._v(" 类型关联的 "),s("code",[t._v("nodeSelectorTerms")]),t._v("， 只要其中一个 "),s("code",[t._v("nodeSelectorTerms")]),t._v(" 满足的话，Pod 就可以被调度到节点上。")])],1)]),t._v(" "),s("li",[s("p",[s("font",{attrs:{color:"red"}},[t._v("如果指定了多个与同一 "),s("code",[t._v("nodeSelectorTerms")]),t._v(" 关联的 "),s("code",[t._v("matchExpressions")]),t._v("， 则只有当所有 "),s("code",[t._v("matchExpressions")]),t._v(" 都满足时 Pod 才可以被调度到节点上。")])],1)])]),t._v(" "),s("h4",{attrs:{id:"节点亲和性权重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点亲和性权重"}},[t._v("#")]),t._v(" 节点亲和性权重")]),t._v(" "),s("blockquote",[s("p",[t._v("可以为 "),s("code",[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),t._v(" 亲和性类型的每个实例设置 "),s("code",[t._v("weight")]),t._v(" 字段，其取值范围是 1 到 100。 当调度器找到能够满足 Pod 的其他调度请求的节点时，调度器会遍历节点满足的所有的偏好性规则， 并将对应表达式的 "),s("code",[t._v("weight")]),t._v(" 值加和。最终的加和值会添加到该节点的其他优先级函数的评分之上。 在调度器为 Pod 作出调度决定时，总分最高的节点的优先级也最高。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("affinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("anti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("affinity\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/os\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" linux\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("affinity\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/pause"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n")])])]),s("p",[t._v("如果存在两个候选节点，都满足 "),s("code",[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),t._v(" 规则， 其中一个节点具有标签 "),s("code",[t._v("label-1:key-1")]),t._v("，另一个节点具有标签 "),s("code",[t._v("label-2:key-2")]),t._v("， 调度器会考察各个节点的 "),s("code",[t._v("weight")]),t._v(" 取值，并将该权重值添加到节点的其他得分值之上。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"nodename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodename"}},[t._v("#")]),t._v(" nodename")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("\n")])])]),s("p",[t._v("上面的 Pod 只能运行在节点 "),s("code",[t._v("kube-01")]),t._v(" 之上。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"污点和容忍度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#污点和容忍度"}},[t._v("#")]),t._v(" 污点和容忍度")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("节点亲和性")]),s("OutboundLink")],1),t._v(" 是 "),s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),s("OutboundLink")],1),t._v(" 的一种属性，它使 Pod 被吸引到一类特定的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),s("OutboundLink")],1),t._v(" （这可能出于一种偏好，也可能是硬性要求）。 "),s("em",[t._v("污点")]),t._v("（Taint）则相反——它使节点能够排斥一类特定的 Pod。")]),t._v(" "),s("p",[t._v("容忍度（Toleration）是应用于 Pod 上的，允许（但并不要求）Pod 调度到带有与之匹配的污点的节点上。")]),t._v(" "),s("p",[t._v("污点和容忍度（Toleration）相互配合，可以用来避免 Pod 被分配到不合适的节点上。 每个节点上都可以应用一个或多个污点，这表示对于那些不能容忍这些污点的 Pod，是不会被该节点接受的。")])]),t._v(" "),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl taint nodes node1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("key1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value1:NoSchedule\n")])])]),s("p",[t._v("给节点添加一个污点")]),t._v(" "),s("p",[t._v("给pod设置容忍度")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Equal"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoSchedule"')]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exists"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoSchedule"')]),t._v("\n")])])]),s("p",[t._v("这两个容忍度都与上面的污点相匹配，pod拥有任意一个既能够被分配给node1")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example-key"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exists"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoSchedule"')]),t._v("\n\n")])])]),s("p",[s("code",[t._v("operator")]),t._v(" 的默认值是 "),s("code",[t._v("Equal")])]),t._v(" "),s("p",[t._v("一个容忍度和一个污点相“匹配”是指它们有一样的键名和效果，并且：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("operator")]),t._v(" 是 "),s("code",[t._v("Exists")]),t._v(" （此时容忍度不能指定 "),s("code",[t._v("value")]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("operator")]),t._v(" 是 "),s("code",[t._v("Equal")]),t._v(" ，它们的 "),s("code",[t._v("value")]),t._v(" 应该相等")])])])}),[],!1,null,null,null);a.default=n.exports}}]);