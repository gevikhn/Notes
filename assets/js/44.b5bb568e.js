(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{494:function(t,a,e){"use strict";e.r(a);var s=e(29),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),e("h2",{attrs:{id:"pod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[t._v("#")]),t._v(" pod")]),t._v(" "),e("ul",[e("li",[t._v("最小部署单元，kubernetes不会直接处理容器，而是由数个container组成的pod")]),t._v(" "),e("li",[t._v("一个pod中的容器共享网络命名空间")]),t._v(" "),e("li",[t._v("每个pod都由一个被称为”根容器“的Pause容器，除此之外还有数个用户业务容器")]),t._v(" "),e("li",[t._v("docker是单进程的")]),t._v(" "),e("li",[t._v("pod是多进程")])]),t._v(" "),e("h3",{attrs:{id:"实现机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现机制"}},[t._v("#")]),t._v(" 实现机制")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("网络共享")]),t._v(" "),e("p",[t._v("在创建pod时，会首先创建一个pause容器，然后再创建业务容器，业务容器加入到pause中，以让所有业务容器在同一个namespace中")])]),t._v(" "),e("li",[e("p",[t._v("共享存储")]),t._v(" "),e("p",[t._v("通过数据卷来进行持久化存储")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);